version: '3.1'

services:
  docker-mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password --init-file /data/application/init-db.sql
    restart: always
    volumes:
        - ./init-db.sql:/data/application/init-db.sql
    environment:
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3306:3306"
    expose:
      - "3306"
    networks:
      - local_network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7.0.1-alpine
    networks:
      - local_network
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      docker-mysql:
        condition: service_healthy
    networks:
      - local_network

  eureka:
    # image: ghcr.io/raf-si-2021/bolnica-eureka:latest
    restart: always
    container_name: eureka-service
    build:
      context: ./eureka
      dockerfile: Dockerfile
    healthcheck:
       test: curl -f http://localhost:8761
    ports: 
      - "8761:8761"
    expose:
      - "8761"
    networks:
      - local_network

  gateway:
    # image: ghcr.io/raf-si-2021/bolnica-gateway:latest
    restart: always
    container_name: gateway-service
    ports:
      - "9092:9092"
    build:
      context: ./gateway
      dockerfile: Dockerfile
    networks:
      - local_network
    depends_on:
      eureka:
        condition: service_healthy

  user-service:
    # image: ghcr.io/raf-si-2021/bolnica-user-service:latest
    restart: unless-stopped
    build:
      context: ./user
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - local_network
    depends_on:
      docker-mysql:
        condition: service_healthy
      eureka:
        condition: service_healthy
      
  management-service:
#    image: ghcr.io/raf-si-2021/bolnica-management-service:latest
    restart: unless-stopped
    container_name: management-service
    build:
      context: ./management
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - local_network
    depends_on:
      docker-mysql:
        condition: service_healthy
      eureka:
        condition: service_healthy

  laboratory-service:
    # image: ghcr.io/raf-si-2021/bolnica-laboratory-service:latest
    restart: unless-stopped
    container_name: laboratory-service
    build:
      context: ./laboratory
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    networks:
      - local_network
    depends_on:
      docker-mysql:
        condition: service_healthy
      eureka:
        condition: service_healthy

networks:
  local_network:
    name: local_network